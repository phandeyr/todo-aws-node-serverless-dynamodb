service: todo
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-east-2
  # Service wide environment variables
  environment:
    TODO_TABLE: todo-${opt:stage, self:provider.stage}
  # Lambda function's IAM Role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${self:provider.environment.TODO_TABLE}

# Todo handlers
functions:
  create:
    handler: api/todo.create
    description: Creates a todo item
    events:
      - http:
          path: todos
          method: post
  get:
    handler: api/todo.get
    description: Gets a todo item
    events:
      - http:
          path: todos/{id}
          method: get
  getAll:
    handler: api/todo.getAll
    description: Gets all the todo items
    events:
      - http:
          path: todos
          method: get
  update:
    handler: api/todo.update
    description: Updates a todo item
    events:
      - http:
          path: todos/{id}
          method: put
  delete:
    handler: api/todo.delete
    description: Deletes a todo item
    events:
      - http:
          path: todos/{id}
          method: delete

# CloudFormation resource templates
resources:
  Resources:
    TodoDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "ID"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "ID"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.TODO_TABLE}